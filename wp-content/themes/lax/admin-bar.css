/**
 * Make sure this css is enqueued after our base css as it overrides
 * styles for when the admin bar is present. We could put this in the
 * main css and qualify everything by '.admin-bar xxx' but that just
 * adds extra complexity to 0.01% of pages.
 */
 /** Pull out menu - need to set height to account for admin bar */
.js .menu-wrapper {
	height: calc(100% - var(--wp-admin--admin-bar--height));
}
/* For some reason WordPress doesn't reset this when they don't used a fixed */
@media screen and (max-width: 600px) {
	html {
		scroll-padding-top: 0;
	}
}

/* media query matches style.css for sticky menu */
@media screen and (min-height: 500px) and (min-width: 680px) {
	html {
		scroll-padding-top: calc(var(--wp-admin--admin-bar--height) + 40px);
	}
	.menu-nav {
		/* scroll-padding-top added by WP handles everything else */
		top: var(--wp-admin--admin-bar--height);
	}
}
@media screen and (min-height: 500px) and (max-width: 679px) {
}
/** Remove sticky menu when WP removes its
 WP goes to position:absolute for the admin menu at 600px, so we do the same.
 We also don't set the header to fixed if height < 500px  */
@media screen and (max-width: 600px),
screen and (max-height: 499px) and (min-width: 601px) and (max-width: 679px) {
	body > header {
		position: static;
	}
	.middle {
		margin-top: 0;
	}
	.js .menu-wrapper, #search {
		top: calc(3px + var(--wp-admin--admin-bar--height));
	}
	#search {
		position: absolute;
	}
}

/* last piece of the puzzle, WP admin bar is fixed, and so is our header */
@media screen and (min-height: 500px) and (min-width: 601px) and (max-width: 679px) {
	html {
		scroll-padding-top: calc(var(--wp-admin--admin-bar--height) + 46px);
	}
	body > header {
		/* scroll-padding-top added by WP handles everything else */
		top: var(--wp-admin--admin-bar--height);
	}
	.js .menu-wrapper, #search {
		top: calc(3px + var(--wp-admin--admin-bar--height));
	}
}
